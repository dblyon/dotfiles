########################################################################################
# directory structure
~/modules/mosys
~/modules/cpr/gocode
~/modules/cpr/code???

git init
git config --global user.name "David Lyon"
git config --global user.email dblyon@gmail.com

##### Mosys: ~/modules/mosys
git remote add origin ssh://git@bitbucket.org/dblyon/modules.git 

##### Brian GO term enrichment: ~/modules/cpr/gocode
git remote add origin ssh://git@bitbucket.org/dblyon/gocode.git

##### AncientProteins: ~/modules/cpr/code???
git remote add origin ssh://git@bitbucket.org/dblyon/code.git

git remote add origin ssh://git@bitbucket.org/dblyon/argmeth.git 

git pull -u origin master
git pull --all 
########################################################################################
###### SUBMISSION GITHUB
/Users/dblyon/Documents/agotool
git init
git config --global user.name "David Lyon"
git config --global user.email dblyon@gmail.com
git remote add origin https://github.com/dblyon/agotool.git
#added .gitignore
git commit -m 'initial commit'
git push -u origin master

########################################################################################
# Arginine Methylation, Michael Lund Nielson
# new bitbucket repo
cd /path/to/my/repo
git remote add origin git@bitbucket.org:dblyon/argmeth.git
git push -u origin --all # pushes up the repo and its refs for the first time
git push -u origin --tags # pushes up any tags
########################################################################################

git remote set-url origin git@bitbucket.org:dblyon/gocode.git




# setting up new repo "code" 
git config --global user.name "David Lyon"
git config --global user.email dblyon@gmail.com
git init
git remote add pentagon ssh://dblyon@oida.violates.me:22222/srv/git/code.git
git remote add pentagon ssh://dblyon@oida.violates.me:22222/home/dblyon/git/code.git
git remote add bitbucket https://dblyon@bitbucket.org/dblyon/code.git
git remote set-url bitbucket git@bitbucket.org:dblyon/code.git
git remote add origin git@bitbucket.org:dblyon/code.git
#git remote set-url bitbucket ssh://git@bitbucket.org/dblyon/code.git
git remote -v

ssh -p 22222 dblyon@oida.violates.me
git clone https://dblyon@bitbucket.org/dblyon/code.git

git remote add coolcat ssh://dblyon@lyonthelion.farted.net:10022/volume1/homes/dblyon/code/.git/
git remote set-url coolcat ssh://dblyon@lyonthelion.farted.net:10022/volume1/homes/dblyon/code/.git/

##### Brian GO term enrichment:
git remote add origin git@bitbucket.org:dblyon/gocode.git
git remote add origin ssh://git@bitbucket.org/dblyon/gocode.git

#update git
git clone git://git.kernel.org/pub/scm/git/git.git

# Perseus
https://github.com/JurgenCox/perseus-plugins

### MoscowVienna
git clone git@bitbucket.org:moscowvienna/multiavg.git
git remote set-url origin ssh://git@bitbucket.org/moscowvienna/multiavg.git

git clone ssh://git@bitbucket.org/moscowvienna/multiavg.git
git remote add origin ssh://git@bitbucket.org/moscowvienna/multiavg.git

80.109.76.91
# connect via SSH
ssh -p 10022 root@lyonthelion.farted.net

#INITIALIZING repo
cd to working directory
git config --global user.name "David Lyon"
git config --global user.email dblyon@gmail.com
git init
git config user.name
git config user.email
#git remote add origin https://dblyon@bitbucket.org/dblyon/modules.git
git remote add bitbucket https://dblyon@bitbucket.org/dblyon/modules.git
#Steve server
git remote add pentagon ssh://dblyon@oida-mahlzeit.dyndns.org:22222/srv/git/label15n.git
git remote add pentagon ssh://dblyon@oida.violates.me:22222/srv/git/label15n.git
git remote set-url pentagon ssh://dblyon@oida.violates.me:22222/srv/git/label15n.git
git remote add pentagon ssh://dblyon@oida.violates.me:22222/srv/git/code.git

# works without pw now
git remote set-url origin ssh://git@bitbucket.org/dblyon/modules.git


# add CoolCat git server to remote list
git remote add coolcat ssh://dblyon@lyonthelion.farted.net:10022/volume1/homes/dblyon/code.git
git remote set-url coolcat ssh://dblyon@lyonthelion.farted.net:10022/volume1/homes/dblyon/modules.git
# temp
git remote set-url coolcat ssh://dblyon@192.168.1.100:22/volume1/homes/dblyon/modules.git

#22222 port7
git remote -v #list of servers (verbose)
git push --all pentagon #push all f current repo to server, don't forget to be in proper working directory
git remote add pentagon ssh://dblyon@oida-mahlzeit.dyndns.org:22222/srv/git/mapping.git

#Filezilla
sftp://oida-mahlzeit.dyndns.org

# CoolCat
# cloning repo from pentagon/bitbucket
mkdir modules
cd modules
git clone ssh://dblyon@oida-mahlzeit.dyndns.org:22222/srv/git/label15n.git
# If you have many remote branches that you want to fetch at once, do:
git remote update
git pull --all

git remote add origin ssh://dblyon@lyonthelion.mysd.me/homes/dblyon/modules.git

#BRANCHING
git branch testing #create new branch called "testing"
git checkout testing #switch to branch "testing"
git checkout -b testing #create a branch and switch to it at the same time
git branch -d testing #delete branch "testing"
git branch #show branches
git branch --merged #show branches that were already merged
git branch --no-merged #... not merged yet

#STAGING
git add .   #adds all in dir
git add blabla.py   #add specific file

#Checking status
git status
git log
git log -p #shows the diff introduced in each commit
git log -p -2# limits the output to only the last two entries
git log --stat #abbreviated stats for each commit
git log --graph
git log --pretty=format:"%h %s" --graph
git help commandname

#edit .gitignore to exclude filestypes

#COMMITING and PUSHING
git commit -m "commit message"
option -a #makes Git automatically stage every file that is already tracked before doing the commit
git commit -a -m 'commiting message of what I've done'  #commit everything and write commit message, 
#also automatically stage files that have been modified and deleted.
git push -u origin master  #
git fetch origin #This command looks up which server origin is, 
#fetches any data from it that you don’t yet have, and updates your local database, 
#moving your origin/master pointer to its new, more up-to-date position

#useful stuff
git diff #doesn’t show all changes made since your last commit — only changes that are still unstaged.
git diff --staged or git diff --cached #If you want to see what you’ve staged that will go into your next commit

#REMOVING files
#If you simply remove the file from your working directory, 
#it shows up under the “Changes not staged for commit” (that is, unstaged) area
#Then, if you run git rm, it stages the file’s removal
git rm filename
#The next time you commit, the file will be gone and no longer tracked.

#HELP 
git config --global core.editor notepad++ #this works (but doesn't know notepad++)
git config --global core.editor textwrangler
git commit -a # should commit stuff even if not added to staging area? and open default editor 
#for entering the commit message but then error:
#error:cannot spawn notepad++: no such file or directory

git remote show origin/pentagon

#LOG
git config --global alias.lol "log --oneline --graph --decorate"

# Copy branch from repo while creating and switching to this new branch locally 

git fetch origin
git checkout --track origin/pubclean
git checkout --track origin/pubclean

# checkout file from local branch
git checkout master -- file.ending # git checkout branchname -- filename.fending

# Checkout File at certain commit
git checkout <commit hash> file


# Stash 
git stash # Now you want to switch branches, but you don’t want to commit what you’ve been working on yet
git stash list # see which stashes you’ve stored
git stash apply # most recent stash and tries to apply it

# Git MERGETOOL
git checkout branchname
git merge anotherbranchname
--> CONFLICT
git mergetool
git commit -m 'blabla'

git config --global merge.tool p4merge
git mergetool --tool-help


# fetch all branches from repo and set branches and tracking locally
for remote in `git branch -r`; do git branch --track $remote; done
git fetch --all
git pull --all





##############################################################################################################
##############################################################################################################
##############################################################################################################
# .gitignore_global
# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# ipython notebook #
######################
.idea/workspace.xml

# agotool #
######################
gene_association.*
go-basic.obo
goslim_generic.obo
*uniprot-proteome*
*.tab
*.tsv

### 
#git config --global core.excludesfile ~/.gitignore_global
##############################################################################################################
##############################################################################################################
##############################################################################################################

# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

gene_association.*
go-basic.obo
goslim_generic.obo
*uniprot-proteome*

.idea/workspace.xml

*.tab
*.tsv


