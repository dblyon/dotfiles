############# after OSX update
gem install lunchy
lunchy start postgres

https://stackoverflow.com/questions/32439167/psql-could-not-connect-to-server-connection-refused-error-when-connecting-to
/usr/local/var/postgres/postgresql.conf
/usr/local/var/postgres/pg_hba.conf


alias pg-start="launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias pg-stop="launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
/Users/dblyon/Library/LaunchAgents/homebrew.mxcl.postgresql.plist -> /usr/local/opt/postgresql/homebrew.mxcl.postgresql.plist


postgres -D /usr/local/var/postgres/
du -sh /usr/local/var/postgres/
##########################################################################################
# installing postgresql on 'ago'
sudo apt-get install postgresql
sudo -u postgres psql postgres
\password postgres;
# dbl2323
sudo systemctl start postgresql
sudo systemctl status postgresql
SHOW data_directory;
/var/lib/postgresql/9.6/main

sudo systemctl stop postgresql
sudo systemctl status postgresql
## change postgresql.conf data_directory:
# old dir
/var/lib/postgresql/9.6/main # drwx------ 19 postgres postgres 4.0K Jan 30 15:47 main
# new dir
/localstorage/postgresql/data/main # drwx------ 2 postgres postgres 4.0K Jan 30 15:49 data
vim /etc/postgresql/9.6/main/postgresql.conf
data_directory = '/localstorage/postgresql/data/main'
rsync -av /var/lib/postgresql/9.6/main /localstorage/postgresql/data
sudo systemctl start postgresql
sudo systemctl status postgresql
sudo -u postgres psql postgres
sudo -u postgres psql metaprot

# populate db
sudo -u postgres psql postgres
CREATE DATABASE metaprot OWNER postgres;
sudo -u postgres psql -U postgres metaprot < metaprot_agotool.pgsql

### create user 'guest' with read-only access to the DB
sudo -u postgres psql metaprot
CREATE USER agotool;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO agotool;
# \du # listing users and their privileges for a database

# start agotool
##########################################################################################

sudo -u agotool psql postgres

# configure pg_hba.conf to allow Unix domain socket connections then login without password
https://www.peterbe.com/plog/connecting-with-psycopg2-without-a-username-and-password
sudo vim /etc/postgresql/9.6/main/pg_hba.conf



psql -U postgres metaprot < metaprot_agotool.pgsql

sudo -u postgres psql postgres


# Rebeca help session:
ps aux | grep sql
kill -9 PID

##########################################################################################
#### Mac OSX
# start the server
lunchy start postgres
lunchy stop postgres

# for the client
psql -h localhost -d postgres

# data directory
SHOW data_directory;
du -sh /usr/local/var/postgres/
##########################################################################################

psql -h localhost -d postgres -U postgres
sudo -u postgres psql postgres
sudo -u postgres psql -h localhost postgres

sudo -u postgres psql -h 127.0.0.01:5432 postgres
psql -h 127.0.0.01:32 -d postgres
psql -h 127.0.0.01 -p 32 -d postgres


# data directory
du -sh /usr/local/var/postgres/

sudo pg_systemctl stop postgresql

#Just in case kill all postgres processes:
>sudo pkill -u postgres
#Login as postgres user:
>su - postgres
#Start the service
>pg_ctl start -D /usr/local/pgsql/data/ -l /usr/local/pgsql/log/logfile
>pg_ctl start -D /usr/local/pgsql/data/ -l /usr/local/pgsql/log/logfile

/usr/bin/pg_ctl start -D /usr/local/pgsql/data/ -l /usr/local/pgsql/log/logfile

Check it is working
>psql
>postgres=# \l


# data dir
/usr/local/pgsql/data

export PATH=/usr/local/pgsql/bin:$PATH
su - postgres # dbl2323
psql metaprot < '/var/www/db'

psql metaprot < -Fd --file '/var/www/db'
psql 'metaprot' < -Fd --file '/var/www/db'

pg_dump -U dblyon metaprot -t 'protein_2_function' -t 'protein_secondary_2_primary_an' -t 'ontologies' -t 'protein_2_og' -t 'og_2_function' -t 'go_2_slim' > metaprot_agotool.pgsql
scp -r /Users/dblyon/Downloads/dbdump/metaprot_agotool.pgsql dblyon@10.34.6.92:/var/www/db/metaprot_agotool.pgsql

## from shell (NOT in psql)
createuser --interactive dblyon
    Shall the new role be a superuser? (y/n) n
    Shall the new role be allowed to create databases? (y/n) y
    Shall the new role be allowed to create more new roles? (y/n) y
CREATE DATABASE metaprot OWNER dblyon;
#psql -U postgres metaprot < metaprot_agotool.pgsql

createuser dblyon
psql -U postgres metaprot < metaprot_agotool.pgsql



psql -U dblyon metaprot < metaprot_agotool.pgsql


# data directory
/usr/local/pgsql/data

sudo rsync -av /usr/local/pgsql/data /localstorage/psql_data
sudo mv /usr/local/pgsql/data /usr/local/pgsql/data.bak
sudo mv /usr/local/pgsql/data.bak /usr/local/pgsql/data



### for MacAir
CREATE ROLE dblyon superuser;
ALTER ROLE dblyon WITH LOGIN;

# from Alberto, create and delete DB?
#/usr/local/pgsql/bin/psql -p5432 -U postgres -c "CREATE DATABASE residues OWNER = postgres";
#/usr/local/pgsql/bin/psql -U postgres -d residues -f ./create_residues_database.sql -q;
/usr/local/bin/psql -p5432 -U postgres -c "CREATE DATABASE metaprot OWNER = postgres"; # this didn't work, create user?

# creating db in psql shell
psql -h localhost -d postgres # login to psql
CREATE DATABASE metaprot; # create the db
CREATE DATABASE test;
CREATE DATABASE test OWNER dblyon;



# location of postgreSQL data
show data_directory;
/usr/local/var/postgres

# creating a copy of a database in PostgreSQL
CREATE DATABASE newdb WITH TEMPLATE originaldb OWNER dbuser;
CREATE DATABASE test_copy WITH TEMPLATE test OWNER dblyon; # don't think this worked (at least couldn't find a file)
# command line version
createdb -O ownername -T originaldb newdb

pg_dump -U dblyon test > test_db_exported.pgsql # WORKS !!!

DROP DATABASE metaprot;
DROP DATABASE test;


# Change a database specific parameter.
# ALTER DATABASE name OWNER TO new_owner
ALTER DATABASE metaprot OWNER TO dblyon;


# Define a new user group.
CREATE GROUP name [ [ WITH ] option [ ... ] ]
Where option can be:
SYSID gid
| USER username [, ...]


# get postgresql on osx (first part missing)
mkdir -p ~/Library/LaunchAgents
cp /usr/local/Cellar/postgresql/9.5.4/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/
launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
psql test < /Users/dbl/modules/cpr/metaprot/sql/test_db_export.pgsql

######### VPN Computerome
sudo <path to file>/openvpn --config /usr/local/vpnconf/Client.conf
sudo <path to file>/openvpn --config/Users/dbl/modules/cpr/metaprot/conf/Client.conf



### PostgrSQL REST API
postgrest postgres://postgres:dblyon@localhost:5432/metaprot \
          --port 3000 \
          --schema public \
          --anonymous postgres \
          --pool 200

    DATABASE = {'drivername': 'postgres',
                'host': 'localhost',
                'port': '5432',
                'username': 'dblyon',
                'password': ''}



COPY temp_protein_2_function FROM '/Users/dblyon/modules/cpr/metaprot/sql/tables/test/Protein_2_Function_table.txt'
CREATE INDEX temp_protein_2_function_an_idx ON temp_protein_2_function(an)
CREATE INDEX temp_protein_2_function_function_idx ON temp_protein_2_function(function)
DROP INDEX IF EXISTS protein_2_function_an_idx;
DROP INDEX IF EXISTS protein_2_function_function_idx;
DROP TABLE IF EXISTS protein_2_function;


##########################################################################################
##### FDRiter commands
CREATE DATABASE fdriter;

CREATE TABLE peptidehash_2_proteinsetenum (
    peptidehash bigint,
    proteinsetenum integer
    );
CREATE TABLE proteinsetenum_2_an (
    proteinsetenum integer,
    an varchar(25)
    );

# DROP TABLE proteinsetenum_2_an; # (since varchar(17) wasn't enough

COPY peptidehash_2_proteinsetenum FROM '/Volumes/Speedy/PostgreSQL/tables/PeptideHash_2_ProteinSetEnum_table.txt';
COPY proteinsetenum_2_an FROM '/Volumes/Speedy/PostgreSQL/tables/ProteinSetEnum_2_AN_table.txt';

CREATE INDEX peptidehash_2_proteinsetenum_peptidehash_idx ON peptidehash_2_proteinsetenum(peptidehash);
CREATE INDEX proteinsetenum_2_an_proteinsetenum_idx ON proteinsetenum_2_an(proteinsetenum);





##### infos about DB
# largest_DBs
SELECT d.datname AS Name,  pg_catalog.pg_get_userbyid(d.datdba) AS Owner,
    CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT')
        THEN pg_catalog.pg_size_pretty(pg_catalog.pg_database_size(d.datname))
        ELSE 'No Access'
    END AS SIZE
    FROM pg_catalog.pg_database d
    ORDER BY
    CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT')
        THEN pg_catalog.pg_database_size(d.datname)
        ELSE NULL
    END DESC -- nulls first
    LIMIT 20;

# biggest tables
SELECT nspname || '.' || relname AS "relation",
        pg_size_pretty(pg_total_relation_size(C.oid)) AS "total_size"
          FROM pg_class C
          LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace)
          WHERE nspname NOT IN ('pg_catalog', 'information_schema')
            AND C.relkind <> 'i'
            AND nspname !~ '^pg_toast'
          ORDER BY pg_total_relation_size(C.oid) DESC
          LIMIT 20;


###### newest version including indexes

   name    | owner  |  size
-----------+--------+---------
 fdriter   | dblyon | 58 GB
 postgres  | dblyon | 7151 kB
 template1 | dblyon | 7041 kB
 template0 | dblyon | 7041 kB
 test      | dblyon | 7041 kB
(5 rows)

                      relation                       | total_size
-----------------------------------------------------+------------
 public.proteinsetenum_2_taxidlca_2_proteinenumarray | 33 GB
 public.peptidehash_2_proteinsetenum                 | 23 GB
 public.child_2_parent                               | 1618 MB
 public.proteinenum_2_an_2_taxid                     | 297 MB
 public.taxa                                         | 202 MB
 public.taxid_2_rank                                 | 104 MB
 public.taxid_merged                                 | 2744 kB
(7 rows)


##########################################################################################
CREATE DATABASE fdriter;

CREATE TABLE peptidehash_2_proteinsetenum (
    peptidehash bigint,
    proteinsetenum integer
    );
CREATE TABLE proteinsetenum_2_taxidlca_2_proteinenumarray (
    proteinsetenum integer,
    taxid_lca integer,
    proteinenum_arr integer ARRAY
    );
CREATE TABLE proteinenum_2_an_2_taxid (
    proteinenum integer,
    an text,
    taxid integer
    );

COPY peptidehash_2_proteinsetenum FROM '/Users/dblyon/modules/cpr/fdriter/tables/test/PeptideHash_2_ProteinSetEnum_table.txt';
COPY proteinsetenum_2_taxidlca_2_proteinenumarray FROM '/Users/dblyon/modules/cpr/fdriter/tables/test/ProteinSetEnum_2_TaxIDLCA_2_ProteinEnumArray_table.txt';
COPY proteinenum_2_an_2_taxid FROM '/Users/dblyon/modules/cpr/fdriter/tables/test/ProteinEnum_2_AN_2_TaxID_table.txt';

CREATE INDEX peptidehash_2_proteinsetenum_peptidehash_idx ON peptidehash_2_proteinsetenum(peptidehash);
CREATE INDEX proteinsetenum_2_taxidlca_2_proteinenumarray_proteinsetenum_idx ON proteinsetenum_2_taxidlca_2_proteinenumarray(proteinsetenum);
CREATE INDEX proteinenum_2_an_2_taxid_proteinenum_idx ON proteinenum_2_an_2_taxid(proteinenum);


##### aGOtool before
               relation                | total_size
---------------------------------------+------------
 public.protein_2_function             | 71 GB
 public.protein_2_og                   | 328 MB
 public.og_2_function                  | 172 MB
 public.ontologies                     | 74 MB
 public.protein_secondary_2_primary_an | 34 MB
 public.function_2_definition          | 13 MB
 public.ogs                            | 9664 kB
 public.functions                      | 6384 kB
 public.go_2_slim                      | 32 kB
(9 rows)

##### aGOtool after
               relation                | total_size
---------------------------------------+------------
 public.protein_2_function             | 16 GB
 public.protein_2_og                   | 328 MB
 public.og_2_function                  | 172 MB
 public.ontologies                     | 33 MB --> no index
 public.protein_secondary_2_primary_an | 22 MB
 public.functions                      | 14 MB
 public.ogs                            | 9664 kB
 public.go_2_slim                      | 16 kB
(8 rows)


    name     | owner  |  size
-------------+--------+---------
 fdriter     | dblyon | 58 GB
 agotool     | dblyon | 17 GB
 agtool_test | dblyon | 544 MB
 postgres    | dblyon | 7151 kB
 test        | dblyon | 7041 kB
 template0   | dblyon | 7041 kB
 metaprot    | dblyon | 7041 kB
 template1   | dblyon | 7041 kB
(8 rows)


LC_ALL=C sort --parallel 2 -T /localstorage/temp /var/www/agotool/static/data/PostgreSQL/tables/Protein_2_Function_table_temp.txt -o /var/www/agotool/static/data/PostgreSQL/tables/Protein_2_Function_table_temp.txt

fn_in = r"/var/www/agotool/static/data/PostgreSQL/tables/Protein_2_Function_table_temp.txt"
fn_out = r"/var/www/agotool/static/data/PostgreSQL/tables/Protein_2_Function_table.txt"
long_2_wide_format(fn_in, fn_out)

# old state of agotool DB on modify
relation                | total_size
---------------------------------------+------------
public.protein_2_function             | 16 GB
public.protein_2_og                   | 328 MB
public.og_2_function                  | 172 MB
public.ontologies                     | 33 MB
public.protein_secondary_2_primary_an | 22 MB
public.functions                      | 14 MB
public.ogs                            | 9664 kB
public.go_2_slim                      | 16 kB

# current state of agotool DB on modify, 20180205
relation                | total_size
---------------------------------------+------------
public.protein_2_function             | 20 GB
public.ogs                            | 211 MB
public.protein_secondary_2_primary_an | 205 MB
public.protein_2_og                   | 35 MB
public.ontologies                     | 33 MB
public.functions                      | 27 MB
public.og_2_function                  | 9664 kB
public.go_2_slim                      | 48 kB

# current state of agotool DB on modify, 20180205 newest
relation                | total_size
---------------------------------------+------------
public.protein_2_function             | 20 GB
public.protein_secondary_2_primary_an | 205 MB
public.ogs                            | 172 MB
public.protein_2_og                   | 35 MB
public.ontologies                     | 33 MB
public.functions                      | 14 MB
public.og_2_function                  | 9664 kB
public.go_2_slim                      | 16 kB
(8 rows)

# on docker
relation                | total_size
---------------------------------------+------------
public.protein_2_function             | 20 GB
public.protein_secondary_2_primary_an | 205 MB
public.ogs                            | 172 MB
public.protein_2_og                   | 35 MB
public.ontologies                     | 33 MB
public.functions                      | 14 MB
public.og_2_function                  | 9664 kB
public.go_2_slim                      | 16 kB

# on docker, 20180205
relation                | total_size
---------------------------------------+------------
public.protein_2_function             | 20 GB
public.protein_secondary_2_primary_an | 205 MB
public.ogs                            | 172 MB
public.protein_2_og                   | 35 MB
public.ontologies                     | 33 MB
public.functions                      | 14 MB
public.og_2_function                  | 9664 kB
public.go_2_slim                      | 16 kB


relation                | total_size
---------------------------------------+------------
public.protein_2_function             | 21 GB
public.protein_secondary_2_primary_an | 205 MB
public.ogs                            | 172 MB
public.protein_2_og                   | 35 MB
public.ontologies                     | 33 MB
public.functions                      | 14 MB
public.og_2_function                  | 9664 kB
public.go_2_slim                      | 16 kB
